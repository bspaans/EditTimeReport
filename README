Edit Time Report
----------------

  This is a tool that helps you make detailed time reports of the work 
  you have done in the past. It is mostly aimed at programmers who use a 
  scriptable editor (eg. vim, emacs,..), since these programs allow you to 
  log when you have edited a file.

  The premise:

  1. Scriptable editors contact a permanently running daemon on each 
     save/close/whatever.

  2. The daemon adds timestamps to these actions and writes them to a 
     flat plain text file.

  3. A separate tool can parse the logs and enables you to query the data 
     and generate reports (in plain text, html,xhtml or csv)

  4. You will be able to answer questions like:

     * How many hours did I spent working on a language/project/file?
     * What language have I used the most this year?
     * What's my most productive day of the week?
     * How much time did I work on year/month/week/day?
     * ..and on which project or language?


Current status » Daemon
-----------------------

  The daemon was written in Python using the Twisted networking library. 
  It logs to a flat plain text file in the following format:

   2009 12 29 10 39 23 1 363 EDIT /home/bspaans/src/file.hs
   YEAR MONTH DAY HOUR MIN SEC DOW DOY COMMAND FILE

  where DOW and DOY resp. stand for the day of the week and year, 
  and where COMMAND is one of EDIT, NEW, START or STOP. 

  The program can be found in the daemon/ directory under the name 
  `timechartd'.


Current status » Client
-----------------------

  The client is a simple bash script that reads a username and password 
  from a file and contacts the daemon. The edit message can be set using 
  command line arguments. You can find the client named 'timechart' in 
  the daemon/ directory. 


Current status » Generating Reports
-----------------------------------

  The reporting program is written in Haskell. It can parse the log file, 
  do some analysis (like project and language classification) and produce 
  HTML, XHTML, csv and plain text output.

  It has a simple DSL comparable to SQL (but much, much simpler) to query 
  the data and create reports with your own restraints. See Query.hs 
  in report/ for a description of the grammar and some usage examples.


Installing the Daemon and Client
--------------------------------

  Install the daemon and client by going into the daemon/ 
  directory and doing a: 


      sudo python setup.py install


  This will only work if you already have the Twisted library installed, 
  which is probably well known enough to be packaged by your distribution 
  already.

  If all has gone right, the daemon, client and basicliser library will 
  now all be installed. Next, you need to make sure the daemon is started 
  when you login. There are several ways to do this, some dependent of 
  window managers, but that should be easy enough to find out. 

  The command to be started on login should read like this:


      timechartd /path/to/config/directory/


  The path will be used to store the log file and the user database, 
  so make sure it's writable. 

  Now the only thing that remains is to set up your editor hooks.
  I have been using the following for vim to give you an idea:


      " chart functionality
      autocmd VimEnter * :silent ! timechart -s
      autocmd VimLeave * :silent ! timechart -e
      autocmd BufNewFile * :silent ! timechart -n <afile>:p
      autocmd BufWritePost * :silent ! timechart -w <afile>:p


  That's it!


Installing the Reporting Tool
-----------------------------

  Compiling the reporting tool is easy if you have cabal:

    cabal install

  Alternatively, you could install the program manually if you have all
  the dependencies (check Report.cabal):
 
    alex QueryLexer.x
    happy QueryParser.y
    ghc --make Main.hs 

  Use the --help switch to find out more about the program. 
