¡¡¡¡¡¡ work in progress !!!!!!!



EditTimeChart [think of better name later]
------------------------------------------

  A tool aimed at programmers and other people who spend a lot of time in their 
  editor (or in other scriptable programs). 

  The idea:

  1. There is a permanently running daemon that logs commands to a file
  2. Scriptable editors contact the daemon on each save/close/whatever.
  3. We can graph our work, without having to do any manual work.
  4. ???
  5. PROFIT (literally!)



Current status » Daemon
-----------------------

  The daemon was written in Python using the Twisted networking library. 
  It logs to a flat plain text file in the following format:

   2009 12 29 10 39 23 1 363 EDIT /home/bspaans/src/file.hs
   YEAR MONTH DAY HOUR MIN SEC DOW DOY COMMAND FILE

  where DOW and DOY resp. stand for the day of the week and year, 
  and where COMMAND is one of EDIT, START or STOP. 

  The program can be found in the daemon/ directory under the name 
  `timechartd' and uses the basicliser library to do most of its 
  heavy lifting.


Current status » Client
-----------------------

  The client is a simple bash script that reads a username and password 
  from a file and contacts the daemon. The edit message can be set using 
  command line arguments. You can find the client in the daemon/ 
  directory. It's called `timechart' at the moment, but this may change


Current status » Graphing
-------------------------

  The graphing program is still under heavy development. It is written in 
  Haskell and only makes use of the libraries in the Haskell Platform; 
  no other packages are needed. It can currently parse the log file, 
  do some analysis (like project and language classification) and produce 
  HTML pagee in tabular format, but in the future this will 
  become more interesting, and will be able to answer questions like:

   * how many hours did I spent on a project/file?
   * what's my most productive time of the year/month/week/day?
   * What language have I used the most this year?
   * what's that configuration file I had to edit eight months ago?



Current status » Building
-------------------------

  Running the daemon and client is already possible (I have been doing so 
  since begin December), but the graphing functionality is still a bit 
  lacking. If you don't mind that or if you are up to writing your 
  own report generators, then these are the instructions to get you 
  going: 


Installing the Daemon and Client
--------------------------------

  Install the daemon and client by going into the daemon/ 
  directory and doing a: 


      sudo python setup.py install


  This will only work if you already have the Twisted library installed, 
  which is probably well known enough to be packaged by your distribution 
  already.

  If all has gone right, the daemon, client and basicliser library will 
  now all be installed. Next, you need to make sure the daemon is started 
  when you login. There are several ways to do this, some dependent of 
  window managers, but that should be easy enough to find out. 

  The command to be started on login should read like this:


      timechartd /path/to/config/directory/


  The path will be used to store the log file and the user database, 
  so make sure it's writable. 

  Now the only thing that remains is to set up your editor hooks.
  I have been using the following for vim to give you an idea:


      " chart functionality
      autocmd VimEnter * :silent ! timechart -s
      autocmd VimLeave * :silent ! timechart -e
      autocmd BufNewFile * :silent ! timechart -n <afile>:p
      autocmd BufWritePost * :silent ! timechart -w <afile>:p


  That's it!


Installing the Graph Tool
-------------------------

  As said, this program is not finished yet, but if you want to have a 
  look at its current (pre-alpha) state, you can compile it using 
  cabal:

    cabal install

  Or, alternatively, using ghc directly:

    ghc --make Main.hs 

  To produce a HTML report of the log file, you can then run:

    report edittime.log 

